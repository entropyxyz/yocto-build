name: Build CVM Image
run-name: Build CVM Image (started by @${{ github.triggering_actor }})

on:
  push:
    branches:
      - "*"
    tags:
      # First, match SemVer.org conformant tags in the `release/` tagspace.
      - release/v[0-9]+.[0-9]+.[0-9]+-?**  # Release, or pre-release build.
      - release/v[0-9]+.[0-9]+.[0-9]+\+?** # Release with build identifier.
      # Then, also, basically any release-ish name in the `test/` tagspace.
      - test/**release/**

jobs:
  get-latest-src-release-details:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.extract.outputs.commit_hash }}
      branch_name: ${{ steps.extract.outputs.branch_name }}
    steps:
      - name: Checkout entropy-core
        uses: actions/checkout@v4
        with:
          repository: 'entropyxyz/entropy-core'
          fetch-depth: 0

      - name: Get the branch name and commit hash of the latest release of entropy-core
        id: extract
        run: |
          # Get commit hash of latest tagged release of entropy-core
          commit_hash=$(git rev-list -n 1 --tags='release*' --date-order)
          echo "commit_hash=$commit_hash" >> $GITHUB_OUTPUT
          # Get all remote branches that contain the current commit
          branches=$(git branch -r --contains $commit_hash)
          branch_name=$(echo "$branches" | head -n 1 | sed 's|^[^/]*/||' | xargs)
          echo "First matching branch name: $branch_name"
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

  build:
    runs-on: core-build-runner
    needs: get-latest-src-release-details
    timeout-minutes: 90

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest

    - name: Build CVM image - with the service name given in the tag or branch name
      run: |
        if [[ "${GITHUB_REF_NAME}" == *api_key_tdx* ]]; then
          CVM_SERVICE_NAME=api_key_tdx
        else
          CVM_SERVICE_NAME=entropy-tss
        fi
        make image-base CVM_SERVICE_NAME=$CVM_SERVICE_NAME CVM_SERVICE_SRC_REV=${{ needs.get-latest-src-release-details.outputs.commit_hash }} CVM_SERVICE_SRC_BRANCH=${{ needs.get-latest-src-release-details.outputs.branch_name }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: images
        path: /home/runner/work/yocto-build/yocto-build/reproducible-build/artifacts-base

  release:
    needs: build
    if: ${{ contains(github.ref_name, 'release') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: images/core-image-minimal-tdx-gcp.rootfs.wic.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
